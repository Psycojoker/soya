-extends "base.haml"
-load section_tags
-load mptt_tags
-load static

-block head
  %link{href: "{% static 'css/bootstrap-switch.min.css' %}", rel: "stylesheet"}
  %link{href: "{% static 'css/fuelux.min.css' %}", rel: "stylesheet"}
  %link{href: "{% static 'css/section_list.css' %}", rel: "stylesheet"}
  :css
    .bootstrap-switch {
      border-color: #3A3D44;
    }

    .bootstrap-switch .bootstrap-switch-label {
      background: #D0D0D0;
    }

-block content
  .row
    .col-md-6
      %h2 Group :
        =object.name
        %small.pull-right
          %a.btn.btn-primary{href: "{% url 'administration_group_update' object.pk %}"}
            Modifier
          %a.btn.btn-danger{href: "{% url 'administration_group_delete' object.pk %}"}
            Supprimer

      %hr

      -if object.admins.all.exists
        .panel.panel-primary
          .panel-heading Administrateurs du groupe
          .list-group
            -for admin in object.admins.all
              %a.list-group-item{href: "{% url 'administration_user_detail' admin.pk %}"}
                =admin
      -else
        %p
          Ce groupe n'a pas d'administrateurs.

      -if object.users.all.exists
        .panel.panel-primary
          .panel-heading Membres du groupe
          .list-group
            -for group_user in object.users.all
              %a.list-group-item{href: "{% url 'administration_user_detail' group_user.pk %}"}
                =group_user
      -else
        %p
          Ce groupe n'a pas de membres.

    .col-md-6
      -if user.is_staff
        %h2 Permissions
        %hr

        Téléchargement
        %span{style: "margin-left: 20px;"}
          %input{type: "checkbox", name: "can_download", data-size: "mini", data-on-color: "success", data-off-color: "danger", data-on-text: "autorisé", data-off-text: "non&#8239;autorisé", data-group-id: "{{ object.id }}", data-has-permission: "{{ object.can_download }}"}

        .fuelux
          %ul.tree.tree-folder-select
            -recursetree section_list
              %li.tree-branch
                .tree-branch-header
                  %span.glyphicon.icon-caret.glyphicon-play{style: "transform: rotate(90deg);"}
                    %span.sr-only Open
                  =node.title
                  %span{style: "margin-left: 20px;"}
                    %input{type: "checkbox", name: "foobar", data-size: "mini", data-on-color: "success", data-off-color: "danger", data-on-text: "autorisé", data-off-text: "non&#8239;autorisé", data-group-id: "{{ object.id }}", data-section-id: "{{ node.id }}", data-has-permission: "{% is_group_have_access node object %}"}
                -if not node.is_leaf_node
                  %ul.tree-branch-children
                    =children


      -else
        %h2 Sections lisibles par les membres de ce groupe
        %hr

        -for top_section, childrens in section_list
          .fuelux
            %ul.tree.tree-folder-select
              %li.tree-branch
                .tree-branch-header
                  %span.glyphicon.icon-caret.glyphicon-play
                    %span.sr-only Open
                  =top_section.title
                %ul.tree-branch-children
                  -recursetree childrens
                    %li.tree-branch
                      .tree-branch-header
                        %span.glyphicon.icon-caret.glyphicon-play
                          %span.sr-only Open
                        =node.title
                      -if not node.is_leaf_node
                        %ul.tree-branch-children
                          =children


-block javascript
  -if user.is_staff
    %script{src: "{% static 'js/ajax_django_magic.js' %}"}
    %script{src: "{% static 'js/bootstrap-switch.min.js' %}"}
    :javascript
      $(function() {
        // change_user_section_permission && change_group_section_permission
        // buttons
        $("[name='foobar']").each(function(index, data) {
          if (data.attributes["data-has-permission"].value == "true") {
            data.checked = true;
          }
          $(data).bootstrapSwitch();
          $(data).on("switchChange.bootstrapSwitch", function(event, value) {
            attributes = event.currentTarget.attributes;
            console.log(value);

            $.post("{% url 'administration_change_group_section_permission' %}", {
              "group": attributes["data-group-id"].value,
              "section": attributes["data-section-id"].value,
              "state": value
            })
          })
        });

        // can_download button
        $("[name='can_download']").each(function(index, data) {
          if (data.attributes["data-has-permission"].value == "True") {
            data.checked = true;
          }
          $(data).bootstrapSwitch();
          $(data).on("switchChange.bootstrapSwitch", function(event, value) {
            attributes = event.currentTarget.attributes;
            console.log(value);

            $.post("{% url 'administration_change_group_can_download' %}", {
              "group": attributes["data-group-id"].value,
              "state": value
            })
          })
        });
      })
